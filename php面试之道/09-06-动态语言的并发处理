# 动态语言的并发处理

- - [什么是进程、线程、协程](https://www.kancloud.cn/idcpj/php_interview/610449#_2)

  - - [进程( Process)](https://www.kancloud.cn/idcpj/php_interview/610449#_Process_3)
    - [线程](https://www.kancloud.cn/idcpj/php_interview/610449#_20)
    - [协程](https://www.kancloud.cn/idcpj/php_interview/610449#_35)
    - [线程与进程的区别](https://www.kancloud.cn/idcpj/php_interview/610449#_38)
    - [线程与协程的区别](https://www.kancloud.cn/idcpj/php_interview/610449#_45)

  - [什么是多进程、多线程](https://www.kancloud.cn/idcpj/php_interview/610449#_50)

  - - [多进程](https://www.kancloud.cn/idcpj/php_interview/610449#_51)
    - [多线程](https://www.kancloud.cn/idcpj/php_interview/610449#_55)

  - [同步阻塞模型](https://www.kancloud.cn/idcpj/php_interview/610449#_59)

  - - [多进程](https://www.kancloud.cn/idcpj/php_interview/610449#_60)
    - [多线程](https://www.kancloud.cn/idcpj/php_interview/610449#_62)
    - [缺点](https://www.kancloud.cn/idcpj/php_interview/610449#_64)

  - [异步非阻塞模型](https://www.kancloud.cn/idcpj/php_interview/610449#_68)

  - [PHP并发编程实践](https://www.kancloud.cn/idcpj/php_interview/610449#PHP_81)

  - - [PHP的 Swoole扩展](https://www.kancloud.cn/idcpj/php_interview/610449#PHP_Swoole_83)

## 什么是进程、线程、协程

### 进程( Process)

是计算机中的程序关于某数据集合上的一次运行活动,是系统进行资源分配和调度的基本单位,是操作系统结构的基础,进程是一个“执行中的程序

进程的三态模型:多道程序系统中,进程在处理器上交替运行,状态不断地发生变化

- 运行
  运行:当一个进程在处理机上运行时,则称该进程处于运行状态。处于此状态的进程的数目小于等于处理器的数目,对于单处理机系统,处于运行状态的进程只有一个。在没有其他进程可以执行时(如所有进程都在阻塞状态),通常会自动执行系统的空闲进程。
- 就绪
  就绪:当一个进程获得了除处理机以外的一切所需资源,一旦得到处理机即可运行,则称此进程处于就绪状态。就绪进程可以按多个优先级来划分队列。例如,当一个进程由于时间片用完而进入就绪状态时,排入低优先级队列;当进程由I/O操作完成而进入就绪状态时,排入高优先级队列。
- 阻塞
  阻塞:也称为等待或睡眠状态,一个进程正在等待某一事件发生(例如请求Io而等待I/o完成等)而暂时停止运行,这时即使把处理机分配给进程也无法运行,故称该进程处于阻塞状态。

进程的五态模型:对于一个实际的系统,进程的状态及其转换更为复杂
新建态、活跃就绪/静止就绪、运行、活跃阻塞/静止阻塞、终止态

### 线程

线程,有时被称为轻量级进程 (Lightweight Process,LWP),是程序执行流的最小单元。

线程是进程中的一个实体,是被系统独立调度和分派的基本单位,线程自己不拥有系统资源,只拥有一点儿在运行中必不可少的资源但它可与同属一个进程的其它线程共享进程所拥有的全部资源。

一个线程可以刨建和撤消另一个线程,同一进程中的多个线程之间可以并发执行。

线程是程序中一个单一的顺序控制流程。进程内一个相对独立的、可调度的执行单元,是系统独立调度和分派cPU的基本单位指运行中的程序的调度单位。

在单个程序中同时运行多个线程完成不同的工作,称为多线程。

每一个程序都至少有一个线程,若程序只有一个线程,那就是程序本身。

线程的状态:就绪、阻塞、运行

### 协程

协程是一种用户态的轻量级线程,协程的调度完全由用户控制。协程拥有自己的寄存器上下文和栈。协程调度切换时,将寄存器上下文和栈保存到其他地方,在切回来的时候,恢复先前保存的寄存器上下文和栈,直接操作栈则基本没有内核切换的开销,可以不加锁的访问全局变量,所以上下文的切换非常快。

### 线程与进程的区别

1. 线程是进程内的一个执行单元,进程内至少有一个线程,它们共享进程的地址空间,而进程有自己独立的地址空间
2. 进程是资源分配和拥有的单位,同一个进程内的线程共享进程的资源
3. 线程是处理器调度的基本单位但进程不是
4. 二者均可并发执行
5. 每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口,但是线程不能够独立执行,必须依存在应用程序中,由应用程序提供多个线程执行控制

### 线程与协程的区别

1. 一个线程可以多个协程,一个进程也可以单独拥有多个协程
2. 线程进程都是同步机制,而协程则是异步
3. 协程能保留上一次调用时的状态,每次过程重入时,就相当于进入上一次调用的状态

## 什么是多进程、多线程

### 多进程

同一个时间里,同一个计算机系统中如果允许两个或两个以上的进程处于运行状态,这就是多进程(如同时听歌,玩游戏)
多开一个进程,多分配一份资源,进程间通讯不方便

### 多线程

线程就是把一个进程分为很多片,每一片都可以是一个独立的流程
与多进程的区别是只会使用一个进程的资源,线程间可以直接通信

## 同步阻塞模型

### 多进程

最早的服务器端程序都是通过多进程、多线程来解决并发IO的问题一个请求创建一个进程,然后子进程进入循环同步堵塞地与客户端连接进行交互,收发处理数据

### 多线程

用多线程模式实现非常简单,线程中可以直接向某一个客户端连接发送数据

### 缺点

这种模型严重依赖进程的数量解决并发问题
启动大量进程会带来额外的进程调度消耗

## 异步非阻塞模型

- 现在各种高并发异步IO的服务器程序都是基于epol!实现的
- Io复用异步非阻塞程序使用经典的 Reactor模型, Reactor顾名思义就是反应堆的意思,它本身不处理任何数据收发。只是可以监视一个 socket句柄的事件变化

Reactor有4个核心的操作

1. add添加 socket监听到 reactor
2. set修改事件监听,可以设置监听的类型,如可读、可写
3. de从 reactor中移除,不再监听事件
4. callback,事件发生后对应的处理逻辑,一般在add/set时制定

Nginx:多线程 Reactor
Swoole:多线程 Reactor+多进程 Worker

## PHP并发编程实践

### PHP的 Swoole扩展

PHP的异步、并行、高性能网络通信引擎,使用纯C语言编写,提供了PHP语言的异步多线程服务器,异步TcP/UDP网络客户端,异步 MYSQL,异步 Redis,数据库连接池, Asynctask,消息队列,毫秒定时器,异步文件读写,异步DNS查询

除了异步Io的支持之外, Swoole为PHP多进程的模式设计了多个并发数据结构和IPC通信机制,可以大大简化多进程并发编程的工作。

Swoole2.0支持了类似Go语言的协程,可以使用完全同步的代码实现异步程序

Swoole的异步 MYSQL实现

```
$db =  new Swoole\MYSQL;
$server =  array('host'=>",'user=>'','password'=>",database=>",);
$db->connect($server, function(Sdb, Result){
	$db->query ("show tables", function(Swoole\MYSQL $db, $result){
		//do some thing
	});
});
```

上一篇：[动态语言静态化](https://www.kancloud.cn/idcpj/php_interview/610443)下一篇：[并发处理](https://www.kancloud.cn/idcpj/php_interview/610450)